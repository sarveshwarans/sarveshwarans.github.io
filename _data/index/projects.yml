# projects section data
# If you don't have language feature(language.yml is empty), ignore "i18n" items
# Suggest projects' img be located at '/static/assets/img/landing', and edit following img items.

- name: Foodie - Food Management System - Android Application 
#  i18n:
  url: https://atlas7.github.io/fungai-blog/
  gh_user: Atlas7
  repo: fungai-blog
  img: /static/assets/img/landing/fungai_org_icon.png
  desc: >
    The purpose of this project is to create an android application through which friends can share photos of food items that 
    are on sale with each other and the community around them. Additionally, this app will also save the food from being 
    wasted and at the same time providing students with cheaper source of food.

- name: Software Development Cycle - Metric Suit 
#  i18n:
  url: https://fungai-react-ui.herokuapp.com/fungpredict
  gh_user: Atlas7
  repo: fungai-react-ui
  img: /static/assets/img/landing/fungai_org_icon.png
  desc: >
    The Software Development - Metrics Suite is a software product that provides a Graphical User Interface (GUI) to software
    engineering and other developers for the collection, calculation, review m organization and retrieval of several
    commonly used software lifecycle metrics or measurements.

- name: Collision Avoidance In Distributed Computing Systems 
#  i18n:
  url: https://fungai-json-server-heroku.herokuapp.com/
  gh_user: Atlas7
  repo: fungai-json-server-heroku
  img: /static/assets/img/landing/fungai_org_icon.png
  desc: >
    In multirobot system there are many robots operating in common area which may consist of other mobile or moving obstacles. Errors 
    in programming as well as unexpected events in the robot workspace may lead to collisions which may cause various problems. The 
    primary motivation of the paper is to avoid collision and prevent deadlocks in such systems.

- name: Improving Software Defined Wi-Fi Network Performance by Optimising Load Balancing Technique
#  i18n:
  url: http://mathalope.co.uk
  gh_user: Atlas7
  repo: mathalope
  img: /static/assets/img/landing/mathalope_icon.png
  desc: >
    Dynamic Algorithms are more efficient than the Static Algorithms. Combining the information on the number of active connection per server 
    and the shortest path between the client and server results in a more efficient load balancing across the servers. Reducing the size of the 
    coverage cell of the AP will help to transfer the load from overloaded AP to underloaded AP. Combining the information of both the APs and 
    the Stations helps in extracting more valuable information for efficiently implementing the load balancer.

- name: Improving Performance And Security In Byzantine Fault Tolerant Systems
#  i18n:
  url: https://atlas7.github.io/fordworg/
  gh_user: Atlas7
  repo: fordworg
  img: /static/assets/img/landing/kingfisher.jpg
  desc: >
    In a fault tolerant computer system, Byzantine Fault Tolerant (BFT) is where the components fail or produces incorrect results or the inability of the 
    component to convey if the component has failed to the requestor. These types of failures are very general in nature and they are very difficult to 
    detect by the failure detection system. The existing Byzantine Fault Tolerance systems tries to solve the Byzantine failures by having a single leader 
    system which serves all the requests from the clients. The issue with this system is that it possesses a risk of single point of failure. Moreover, having 
    a single leader server is less secure. Our proposal to solve these issues is to have multiple replicas of the leader server to serve the client requests. 
    Having multiple server helps in distributing the load evenly across the servers and improves the performance of the Byzantine Fault Tolerant systems. 

- name: SCOUT - Android Application 
#  i18n:
  url: https://www.amazon.co.uk/Mathalope-co-uk-UK-Towns/dp/B072YJ3WZ8/ref=sr_1_1?s=digital-skills&ie=UTF8&qid=1511457656&sr=1-1&keywords=uk+towns
  gh_user: Atlas7
  repo: alexa-skill-uk-towns
  img: /static/assets/img/landing/alexa_uk_towns_icon.png
  desc: >
    Scout is an Android application which provides solution to the gamers all over the world who are looking for the right partner. Typically, this 
    application will help the gamers to explore other gamers of the required skill set and obtain their unique ID to play the game together. 


- name: Implementation Of Pong Game Using Deep Q Networks
#  i18n:
  url: https://atlas7.github.io/
  gh_user: Atlas7
  repo: atlas7.github.io
  img: /static/assets/img/landing/alexa_uk_towns_icon.png
  desc: >
    The main idea behind this project is to build a PONG game using Deep Neural Networks (DNN). Especially we will be making use of the principles 
    of Deep Q Networks (DQN) in developing this project. A Deep Q Network makes use of key concepts of the DNN along with the Reinforcement Learning (RL).
    In order to successfully implement this project, we will have to make use of the pixels to identify the position of the object on the screen and we will 
    associate a score for it. 

#- name: Jalpc
#  i18n: jalpc
#  gh_user: jarrekk
#  repo: Jalpc
#  img: /static/assets/img/landing/jekyll.png
#  desc: This project is my project. I use javescript to get repo's information all my repos have only one request.
#
#- name: Python
#  i18n: cpython
#  gh_user: python
#  repo: cpython
#  img: /static/assets/img/landing/python.png
#  desc: This project is other's project. I use another request to get repo's information.
#
#- name: Google
#  i18n: google
#  url: https://google.com
#  img: /static/assets/img/landing/google.png
#  desc: This is another project.
